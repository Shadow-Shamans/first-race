version: "3.9"

services:
  client:
    container_name: prakticum-client
    image: prakticum-client
    depends_on:
      - server
    build:
      context: .
      dockerfile: Dockerfile.client
      args:
        CLIENT_PORT: ${CLIENT_PORT}
    restart: always
    ports:
      - "${CLIENT_PORT}:80"
    environment:
      - CLIENT_PORT=${CLIENT_PORT}
      - SERVER_PORT=${SERVER_PORT}

  server:
    container_name: prakticum-server
    image: prackicum-server
    depends_on:
      - postgres
    build:
      context: .
      dockerfile: Dockerfile.server
      args:
        NODE_ENV: ${NODE_ENV}
        SERVER_PORT: ${SERVER_PORT}
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      NODE_ENV: ${NODE_ENV}

  postgres:
    container_name: prakticum-database
    image: postgres:14
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT_INTERNAL}"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./tmp/pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
        ]
      interval: 10s
      timeout: 3s
      retries: 3
